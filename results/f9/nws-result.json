{
  "answers": [
    {
      "number": "1.a",
      "question": "Describe the interaction between mail user agent (MUA), mail transfer agent (MTA), and mail delivery agent (MDA) in SMTP.",
      "text": "SMTP (Simple Mail Transfer Protocol) is the protocol that is used for sending the mail. The users use SMTP to send and receive the mail. It is the groundwork and set of rules on how the mail is sent and received. The SMTP defines different concepts that are attached to this protocol. There are three main kinds in SMTP: Mailbox (send), Mail Sender Agent (MSA), and Mail Submission Agent (MSA).\n\nA Mail User Agent (MUA) is the agent that is responsible for providing the user with the interface. The user agent is responsible for the mail. Gmail, Outlook, etc. are known as user agents. These agents provide the user with all the tools for SMTP protocol. The user agent forms a key role in the protocol. It handles the process of sending an email, and then the user agent is responsible for storing the mail for the user since it is the only agent that interacts with the user.\n(MUA) like Gmail, Outlook, etc. are used by the user to interact with the SMTP protocol.\n\nMail Delivery Agent (MDA): It is another mail delivery protocol that handles the delivery of mail from the sender to the end-user. It ensures that the mail is rightly delivered to the end user from the sender. It also helps MDA-olo [likely a typo, meant to be \"in its role\"] responsible for safeguarding the security of the SMTP protocol. It is also responsible for maintaining the table for the protocol. It is responsible for filtered packages.\n\nMail Transfer Agent (MTA): It is an agent, MTA SMTP protocol, that is responsible for transferring the email from one user to another user of the protocol. The MTA agent will gather the mail and all the contents of the email with information such as the source and the destination. It is stored for the delivery to the destination. It will take the request and transmit it to the user. This protocol is responsible for interaction between all the agents.\nEssentially, mail agents will know all the information and the contents of the source and it will properly identify the destination and transfer it to the MDA. The Mail Delivery Agent (MDA) is responsible for delivering the mail between users and then the MTA will collect and transmit and send emails, which allows the user to read the mail.\nThis is the interaction between Mail Transfer Agent (MTA), Mail User Agent (MUA) and Mail Delivery Agent (MDA).",
      "marks": 5,
      "remark": "Good definitions of MUA, MTA, MDA. Explanation of their interaction is present but could be more structured and clear. Some minor inaccuracies in MDA's security role, like 'filtered packages' and 'maintaining table for protocol' without further context."
    },
    {
      "number": "1.b",
      "question": "Design a security enhancement to DNS to mitigate cache poisoning attacks and explain how it strengthens the resolution process.",
      "text": "DNS (Domain Name System) is a distributed database that contains the IP addresses corresponding to their domain names. DNS is also used to resolve the hostname of the internet before contacting its IP addresses. The database stores, locates, and sorts them. DNS works by: when a user enters a domain name, the server will search for its IP address in the DNS cache to check records, and if absent, it moves to the DNS resolver to find the specific IP address. If it's not found, it will request the DNS root server.\n\nDNS plays an important role in the web and it is an essential aspect. Thus, DNS is prone to many attacks. One important attack is DNS cache poisoning. In this, attackers inject fake addresses into DNS records to disturb or poison the DNS server. This attack works when a user enters a website, and the DNS cache returns fake IP addresses for a website, which means the user is moved to the attacker's website. This is a cache poisoning attack.\n\nTo mitigate such attacks, we need to enhance the security of DNS. We need to use security practices (implement them) that ensure the input is validated and sanitized before entering the system, where it might be attacked. We also need to be vigilant against injection and ensure that we save the database and prevent unauthorized queries.\nWe also need to implement DNSSEC protocol. It provides infrastructure for digital signatures and we verify the requests to be legitimate. It also strengthens the resolution process because we can keep track of the attack and thus secure and manage from the attacks. It will help in faster resolution of the queries. It helps prevent the DoS scale attack because we can mitigate such attacks and strengthen the resolution process.",
      "marks": 6,
      "remark": "Good explanation of DNS cache poisoning and correct identification of DNSSEC as a primary mitigation. The description of how DNSSEC strengthens the resolution process is accurate at a high level. General security practices like input validation are mentioned but DNSSEC is the key."
    },
    {
      "number": "2.a",
      "question": "Explain the methods and challenges of detecting network intrusions in real time. What are the key components of a real-time intrusion detection system?",
      "text": "Network intrusions are a phenomenon where there will be unwanted attacks that cause harm to the network. Network intrusions occur when there are unauthorized requests from unknown users to access the network. These intrusions are launched by attackers to gain access to the network to perform illegitimate actions, and these attackers are often referred to as intruders. Network intrusions are the most common attacks that occur to websites.\n\nThese are general methods used to detect network intrusions in real time:\n1.  **Monitoring network traffic**: Scan all incoming and outgoing requests, check for known and unknown unique and legitimate requests. Such requests indicate that it might be a possible network intrusion. The request will try to access the website. This intrusion is performed on the network.\n2.  **Anomaly detection**: After scanning for anomalous requests, we can detect those that flood the server with messages, which means the attackers might try to overwhelm the network from legitimate users to cause a denial of service. We also monitor for malware activity and classify the attack (e.g., suspicious activity).\n3.  **Host-based intrusion detection**: Intrusion can be detected by a host-based system, but intrusion can be difficult to detect in real time. It is difficult to keep track of all the activity in real time. These are the challenges in detecting intrusions.\n\nAn Intrusion Detection System (IDS) is a system that is responsible for detecting and protecting against possible intrusions in the network. The key components of an IDS are:\n1.  We first scan the network and keep track of all known intrusions and check for them. If we detect the intrusion, we notify.\n2.  After scanning, we keep track of the malicious and suspicious activity. If found, we block it.\n3.  Then we detect the intrusion, identify it, and quarantine it.\nThese are the components of a Network Intrusion Detection System.",
      "marks": 6,
      "remark": "Good explanation of detection methods (signature-based, anomaly-based). Challenges are briefly mentioned. Key components of IDS are identified and described functionally, though the distinction between IDS and IPS is slightly blurred."
    },
    {
      "number": "2.b",
      "question": "Perform a detailed port scan using Nmap on a test virtual machine. Analyze the scan report and identify potential security risks.",
      "text": "Port scanning refers to the technique where we scan the ports of the network and scan for available services and raw connection methods. We scan the network and try to establish a connection with the ports of the network. It is also a technique for port scanning to determine the ports that are open, closed, or filtered. Open ports establish a connection, while closed ports do not establish a connection and are immediately notified when you try to open them.\n\nHere we describe a detailed port scan using Nmap. Nmap is a virtual test tool. We use Nmap for a host scan where we scan for all the available ports on the network. Then we map the ports. The ports are marked open or closed. After mapping the number of ports, we determine if a connection can be established or not. It's a great technique for a host scan because it shows what's available. Port scan is fast and lightweight compared to other techniques because it is stealthy.\n\nIn Nmap, we scan subnets. These are first scanned by sending SYN signals. First, SYN signals are sent to the port, and it will await for an ACK/RST acknowledgment. Instead of performing the entire operation, it will just halt. After sending the SYN signal, if an RST signal is sent back, then the port is closed and cannot be established a connection. So, if a SYN signal is not acknowledged, then the port is open to establish a connection. So, instead of an acknowledgment, we perform a stealth scan and this is faster and lightweight. It also has detected data.\n\nThe scan report could analyze that when we try to establish a connection, we need to ensure the potential risks. Due to some exploitable flaws, these attacks can steal user data. They are also visible to the attacker who can perform DoS attacks and overwhelm the port with unwanted SYN signals. These are some of the potential risks.",
      "marks": 4,
      "remark": "The explanation of port scanning and SYN scan with Nmap is reasonably accurate. However, the answer is theoretical and describes *how* to perform and analyze, rather than *performing* and *analyzing a report* as requested by the 'Apply' cognitive level. No example Nmap commands or a simulated scan report analysis is provided."
    },
    {
      "number": "3.a",
      "question": "Elaborate about computer viruses. Explain the lifecycle of a computer virus.",
      "text": "Computer viruses are malicious software used as a piece of code that is not publicly visible to the system. Computer viruses are used by attackers to gain access to the system for unauthorized actions and perform illegitimate actions. Computer viruses replicate themselves; they make copies of each other once they enter the system. The viruses will spread to all parts of the system and cause damage to the system. Computer viruses can be focused in different avenues. They can be embedded in a system through a malicious software or unknown links or during malicious downloads. Therefore, if a virus is entered into the system, it will affect the entire system, replicating rapidly and destroying the entire system.\n\nThe virus will infect users. It can control other users' systems and access their data without their control over the system. The viruses will take control and perform actions without the user's knowledge. They will replicate in the background without the user's knowledge. It can start malicious attacks that are undetected, unauthorized, and illegal. Thus, it is hard to detect and remove a virus.\n\nThe lifecycle of a virus: The virus will spread and enter the host system. When it enters a malicious website or overall effects, it will begin to spread uncontrollably and replicate to every part of the system. The virus will start damaging until its removal by the attacker, and it will perform unauthorized actions and gain backdoor access to the system. The virus will stay in the host system until it is removed by anti-malware techniques and it will perform illegitimate actions until then. It will spread to other systems and this is the lifecycle of a computer virus and it continues.",
      "marks": 6,
      "remark": "Good elaboration on computer viruses, defining their nature and malicious activities. The lifecycle is described implicitly through the processes of entry, replication, and payload execution, though a more formal breakdown into distinct phases would improve clarity."
    },
    {
      "number": "3.b",
      "question": "Apply any two defensive programming techniques to secure a sample program against known exploits. Justify how each technique contributes to security.",
      "text": "Defensive programming techniques are used to protect the program code and secure it from known exploits. It involves offensive techniques before its production. Attackers exploit vulnerabilities found in the program code that can lead to an attacker exploiting a variety of unauthorized access if unsecured regulations are not followed. We need to have security techniques.\n\nFor example, to protect from known exploits, we need to implement good input validation. This means that we have to standardize the rules and protocols to ensure secure code. When input is entered into the code, we need to check if the input is malicious. Then, fixed vulnerabilities can be found and implemented. This technique ensures that each sample of code is checked for known exploits.\nInput validation and sanitization involve validating input before it enters and sanitizing special characters that can cause issues. We check our code for vulnerabilities so that the code doesn't become outdated. We also need to ensure that the software is up-to-date and that it doesn't include any flaws that attackers can exploit. This contributes to better security, enhancing the structure of the code and all the current requirements. We implement \"don't trust user input\" and we are protected from known exploits.\n\nWe also must implement the use of secure coding standards because it helps us to detect exploits. We also use different test cases, like boundary values test cases. We can observe misbehavior in the code and detect exploits. Attackers can use such exploits, but we can ensure that... (incomplete sentence)\n...for a reliable program that prevents known exploits.",
      "marks": 6,
      "remark": "Two relevant defensive programming techniques (input validation/sanitization, secure coding standards/testing) are identified. Their contribution to security is explained, focusing on preventing exploits from malicious input and detecting vulnerabilities."
    },
    {
      "number": "4.a",
      "question": "Elucidate how spyware and keyloggers compromise user privacy and system security?",
      "text": "Student did not answer this question.",
      "marks": 0,
      "remark": "No answer provided."
    },
    {
      "number": "4.b",
      "question": "Consider a vulnerable C program with a buffer overflow. Describe how an attacker could exploit it to gain shell access. Suggest code-level defenses that can be applied.",
      "text": "Student did not answer this question.",
      "marks": 0,
      "remark": "No answer provided."
    },
    {
      "number": "5.a",
      "question": "Summarize HTTP header injection with an example. Elucidate how can such vulnerabilities be avoided?",
      "text": "HTTP (Hypertext Transfer Protocol) headers are the responses in the HTTP protocol. They contain the necessary information about the HTTP request that helps in gathering information from the user to the server. HTTP headers contain information like the source and the destination, the contents, the payload, etc. HTTP is the protocol that is used to send information from users over the internet. It is a pipeline for data transfers. It provides the security of the data over the internet. It contains the critical information about the secure and critical data, that's why we need to protect it from malicious people.\n\nBut HTTP headers have vulnerabilities that can be exploited, such as HTTP header injection (also called HTTP response injection). This attack occurs where the attacker will inject malicious selection code into the HTTP header. The HTTP header is injected with malicious code, and the code will process the data that is to be processed by the header. The server will provide the information and evaluate the information. With HTTP header injection, the attacker will prevent the user from accessing a legitimate website. They will redirect the user to the attacker's website, inject unauthenticated commands, and perform illegal actions.\n\nWe can prevent such vulnerabilities by input validation and sanitization before the input is entered into the system. We need to perform validation to ensure that it is from a legitimate source, and we confirm that it is not unwanted or unauthorized. We need to enhance the security of the HTTP protocol so that only authorized users can access the content.",
      "marks": 5,
      "remark": "Good explanation of HTTP header injection and its impact. Mitigation strategies (input validation, sanitization, authorization) are correctly identified. However, a concrete example of HTTP header injection is missing, which was explicitly requested."
    },
    {
      "number": "5.b",
      "question": "Outline the role of the DOM in modern web applications. Write a small HTML page that uses CSS and JavaScript to create a navigation menu with two frames.",
      "text": "DOM (Document Object Model) is the code that is used in modern web applications to render all the information for the websites. DOM is essential for the functionality of a website and supports its content. It is used to present the content on a website. It represents the structure, attributes, and behaviors of the website. It is a client-side model that interacts with the server, responding to the user's actions. It is also used as a critical layer for securing the website because it filters malicious input, so attackers cannot attack the website. This is about the role of the DOM in modern web applications.\n\nhtml\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Demo Page</title>\n    <style>\n        header {\n            font-color: black;\n            background: white;\n            font-family: Sans Serif;\n        }\n        body {\n            font-color: blue;\n            font-family: Arial;\n        }\n    </style>\n</head>\n<body>\n    <header>\n        <h1>DEMO</h1>\n        <nav>\n            <a href=\"javascript:Page1()\">Page 1</a>\n            <a href=\"javascript:Page2()\">Page 2</a>\n        </nav>\n    </header>\n    <script>\n        // Assuming there are \"frames\" to load content into,\n        // but the HTML doesn't define actual frames or an iframe.\n        // The student's JS implies changing page content.\n        function Page1() {\n            console.log(\"Moved to Page 1\"); // Original: echo(\"Moved to Page 1\")\n            // In a real scenario, this would load content into a div/iframe\n        }\n        function Page2() {\n            console.log(\"Moved to Page 2\"); // Original: echo(\"Moved to Page 2\")\n        }\n    </script>\n    <hr>\n    This is just for demo.\n</body>\n</html>\n\nOutput:\nDEMO\nPage 1 Page 2\nThis is just for demo.",
      "marks": 4,
      "remark": "The role of DOM is mostly correct, though the claim about it filtering malicious input is inaccurate. The provided HTML/CSS/JavaScript creates a basic navigation menu but does not implement 'two frames' as requested, which significantly impacts the completeness of the coding task. The JS uses pseudo-code ('echo')."
    },
    {
      "number": "6.a",
      "question": "Does HTTPS protect against client-side vulnerabilities like XSS or CSRF? Justify.",
      "text": "Student did not answer this question.",
      "marks": 0,
      "remark": "No answer provided."
    },
    {
      "number": "6.b",
      "question": "Simulate a scenario where violating SOP could allow a malicious page to access sensitive user data.",
      "text": "Student did not answer this question.",
      "marks": 0,
      "remark": "No answer provided."
    },
    {
      "number": "7.a",
      "question": "What is HTTP parameter pollution (HPP)? Describe how multiple parameters with the same name are handled.",
      "text": "HTTP Parameter Pollution (HPP) is an attack where the HTTP server is overwhelmed with HTTP parameters and with multiple parameters. It leads to the server being overloaded and unable to provide its service. HTTP parameters are used to provide the information about the HTTP protocol that is used to handle the information sent over the internet.",
      "marks": 0,
      "remark": "The definition of HTTP Parameter Pollution (HPP) is incorrect; it is described as a DoS attack rather than a vulnerability related to how web applications interpret multiple parameters with the same name. The question's second part, on how multiple parameters with the same name are handled, is not addressed."
    },
    {
      "number": "7.b",
      "question": "A shopping cart application allows users to update item quantities. An attacker modifies a request to set a negative quantity for an item. Describe how this could be exploited as a logic flaw and propose a solution to prevent it.",
      "text": "Student did not answer this question.",
      "marks": 0,
      "remark": "No answer provided."
    },
    {
      "number": "8.a",
      "question": "Elucidate how browser fingerprinting and device fingerprinting techniques are used to identify and track users across different websites, even without traditional cookies.",
      "text": "Browser fingerprinting is the technique that is used to collect data about the user and their browser/website (etc.) over traditional cookies. It is because traditional cookies store the information about the user and their behavior across different websites, but the cookies will be deleted. Whereas browser fingerprinting collects data using the browser to track the user's activity. The browser is responsible for retrieving the user's individual assets. The attacker's browser will identify the users and then will track the user, sending the information to the web browser to collect information without \"tracking\" cookies. The browser collects non-cacheable data.\n\nBrowser fingerprinting can be used to identify, track, and attack users on a global scale. Device fingerprinting is responsible for handling all the activities of the users and managing them. User-controlled device fingerprinting will have behavioral data of the user, which helps to track the user for customized products. Also, these services collect information about the user and the different websites they interact with, how they use them, and what information they are storing. For tracking cookies, to bypass and detect the techniques used to identify and track users across different websites.",
      "marks": 4,
      "remark": "The student correctly defines browser and device fingerprinting as methods to identify and track users without traditional cookies. However, the explanation lacks specific details about the data points (e.g., user agent, fonts, plugins, screen resolution, canvas rendering) used to create these unique fingerprints, which is crucial for elucidating *how* they work."
    },
    {
      "number": "8.b",
      "question": "Inspect a website using browser dev tools and list third-party tracking scripts or pixels detected.",
      "text": "A website can be inspected using browser dev tools. The browser dev tools are available to users and help to perform and simulate the appearance and usability of the websites. It helps to inspect the website because it prevents users from accessing the server-side application of the server and interacts with the client-side application. When a website is attacked, it prevents the users from accessing a malicious address. The website provides the information about the content of the website submitted and also how it appears to the user. It can construct a redirect, detect elements, and track users. It informs us about how a website has been attacked.\n\nThe website also allows a component approach, where it divides into individual components and supports each individual component for the user independently. It also has scripts that render the HTML website, which can be inspected, and it has data and allows DOM (Document Object Model) which helps JavaScript (CSS round the logic from different algorithms) or photos & videos that are embedded in the website.",
      "marks": 1,
      "remark": "The student provides a general description of browser developer tools and their functions for website inspection. However, the answer completely fails to list any specific third-party tracking scripts or pixels detected, which was the primary 'apply' component of the question."
    }
  ]
}